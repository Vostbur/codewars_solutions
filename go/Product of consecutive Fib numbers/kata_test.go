package kata

import (
	"reflect"
	"testing"
)

type testCase struct {
	p        uint64
	expected [3]uint64
}

var testCases = []testCase{
	{4895, [3]uint64{55, 89, 1}},
	{5895, [3]uint64{89, 144, 0}},
	{74049690, [3]uint64{6765, 10946, 1}},
	{84049690, [3]uint64{10946, 17711, 0}},
	{193864606, [3]uint64{10946, 17711, 1}},
	{447577, [3]uint64{610, 987, 0}},
	{602070, [3]uint64{610, 987, 1}},
	{2563195080744681828, [3]uint64{1836311903, 2971215073, 0}},
	{5456077604922913920, [3]uint64{2971215073, 4807526976, 0}},
	{1120149658760, [3]uint64{832040, 1346269, 1}},
	{23843770274, [3]uint64{121393, 196418, 1}},
	{944284833567073, [3]uint64{24157817, 39088169, 1}},
	{74049690, [3]uint64{6765, 10946, 1}},
	{1328767776, [3]uint64{28657, 46368, 1}},
	{163427632719, [3]uint64{317811, 514229, 1}},
	{52623190191455, [3]uint64{5702887, 9227465, 1}},
	{33552, [3]uint64{144, 233, 1}},
	{229970, [3]uint64{377, 610, 1}},
	{1328767776, [3]uint64{28657, 46368, 1}},
	{2472169789339634, [3]uint64{39088169, 63245986, 1}},
}

func TestProductFib(t *testing.T) {
	for _, test := range testCases {
		if output := ProductFib(test.p); !reflect.DeepEqual(output, test.expected) {
			t.Errorf(`Expected
			<[3]uint64>: %v
		to equal
			<[3]uint64>: %v`, output, test.expected)
		}
	}
}
